PolyMorphism:
    Its the ability of an object to behave differently.
    We can achieve polymorphism in two ways, one is methodOverloading and other is methodOverriding(very common).

    Why should we learn about Polymorphism?
    1) it allows us to write dynamic programs. Which can save us a lot code repetition.

Example
    Webdriver webdriver=new ChromeDriver();             Webdriver --> interface
    ChromeDriver chromeDriver = new ChromeDriver();  error   cannot pull firefox, edge...

Interview Questions:
    Do we need MethodOverriding for polymorphism?
    Yes but we can also do this using methodOverloading

Abstraction:
    Abstraction is the process of hiding implementation details and showing only the functionality.
    We can achieve abstraction using abstract classes and interfaces.

Why:
    When we use Abstraction it simplifies our code. Those classes which don't need to provide the implementation
    to the methods can leave it.

Keywords:
    abstract

Interview Q:
    1)Can we have private methods as abstract methods?
    No. Private means no participation in inheritance which means no overriding
    2) Can we have a method as final and abstract at the same time?
    Final means something is complete and does not require any modification and abstract means something is incomplete
    and require modification.
    These are opposite to each other and not allowed.

Interfaces:
    Interfaces are collection of public static final variables and methods which are by default public and abstract.
    After Java 8 we can have default, static and private methods as well.

Why use interfaces?
    1) There is no Diamond problem in interfaces which allow us to have multiple inheritance.
    2) They are lightweight simple contracts and can be used even the classes are not related to each other.
Interview Q:
    Can we have private variables in a interface?






